# Application environment name
application.environment=Development


# How does this server operate: {Peer, Master, Client, Server}. Client means it's an independent Laptop able to connect and receive
# peer connections. Server means it's locked into being one of the AWS environments and can only receive client connections
# from clients, or master nodes.
application.mode=Client

# How often in seconds should a "Client" server check and connect to AWS. Only used if the server is in "Client" mode
application.auto-connect.periodInSecs=600

# The AWS environment specific connection host and port numbr
application.auto-connect.host=dev.<domain>
application.auto-connect.port=443


# SSL keystore properties are unique to each Laptop/Server machine
server.ssl.key-store=${user.dir}/${COMPUTERNAME}_keystore.p12
server.ssl.key-store-password=<keystore password>
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=1
server.ssl.key-password=<key password>

# Enable redirect valve to redirect calls to localhost to the fully qualified hostname to ensure that the
# hostname matches the SSL certificate. This should not be used in server instances or any instance that
# is going via a reverse proxy.
server.hostnameredirect.enabled=true


# Sync Gateway host should only be needed for AWS environments. If set to "Hostname" then the application will use
# the machine's hostname (not localhost). AWS environment should use the environment's public domain name, and not
# Hostname, so something like "dev.<domain>"
sync.gateway.protocol=https
sync.gateway.protocol.internal=https
sync.gateway.host=Hostname
sync.gateway.port=4984
sync.gateway.bucket=kbird
sync.gateway.logFile=C:/Program Files/Couchbase/Sync Gateway/var/lib/couchbase/logs/sync_gateway_error.log
sync.gateway.binPath="C:\\Program Files\\Couchbase\\Sync Gateway\\sg-windows.exe" start "C:\\Program Files\\Couchbase\\Sync Gateway\\sync_gateway.exe" "c:\\dusky\\serviceconfig.json" "C:\\Program Files\\Couchbase\\Sync Gateway\\var\\lib\\couchbase\\logs\\sync_gateway_error.log"

# Use random secret should be enabled for production environments. It will use a random secret for signing JWT tokens
# Set to false for Dev environments so you don't need to authenticate everytime the server is restarted
jwt.useRandomSecret=true

# Create an Admin user for this environment once (if needed) on startup (useful for Dev/Test mainly)
#createAdminUser.enabled=true
#createAdminUser.username=Admin
#createAdminUser.password=encrypted(xxx)

# ESRI ArcGIS map tiles for offline maps
offline.maps.LINZ_geotiffs.alllayers.dir=C:/DuskyMaps/Kakapo_Base_v3_Topo_Export/Layers/_alllayers
