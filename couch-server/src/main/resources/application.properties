# Application version and environment
application.version=8.8.1
application.environment=Development


# How does this server operate: {Peer, Master, Client, Server}. Client means it's an independent Laptop able to connect and receive
# peer connections. Server means it's locked into being one of the AWS environments and can only receive client connections
# from clients, or master nodes.
application.mode=Server

# How often in seconds should a "Client" server check and connect to AWS. Only used if the server is in "Client" mode
application.auto-connect.periodInSecs=600

# The AWS environment specific connection host and port numbr
application.auto-connect.host=dev.<domain>
application.auto-connect.port=443

# Plain old http port, will redirect browser to the "server.port"
application.http.port=8080

# Server port is expected to be TLS. See above for a plain old http port.
# If you change the "server.port" then you'll have to change the Angular "proxy.config.json" properties too
server.port=8443
server.ssl.key-store=${user.dir}/${COMPUTERNAME}_keystore.p12
server.ssl.key-store-password=Password01
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=${COMPUTERNAME}
server.ssl.key-password=Password01

# Enable redirect valve to redirect calls to localhost to the fully qualified hostname to ensure that the
# hostname matches the SSL certificate. This should not be used in server instances or any instance that
# is going via a reverse proxy.
server.hostnameredirect.enabled=true

# JDBC properties, only needed for data migration in Developer environments, can be commented out for environments that
# don't need to do data migration (different to data replication)
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=Kakapo21
spring.datasource.username=DBUser
spring.datasource.password=Password01

# Connection details for the Couchbase database. For Laptops this will be localhost, for AWS environments this will be
# a different machine to the application server.
couchbase.host=localhost
couchbase.port=8091
couchbase.bucket=kakapo-bird
couchbase.bucket.password=Password01

# Sync Gateway host should only be needed for AWS environments. If set to "Hostname" then the application will use
# the machine's hostname (not localhost). AWS environment should use the environment's public domain name, and not
# Hostname, so something like "dev.<domain>"
sync.gateway.protocol=https
sync.gateway.protocol.internal=https
sync.gateway.host=Hostname
sync.gateway.port=4984
sync.gateway.bucket=kbird
sync.gateway.bucket.password=Password01
sync.gateway.logFile=C:/Program Files/Couchbase/Sync Gateway/var/lib/couchbase/logs/sync_gateway_error.log
sync.gateway.binPath="C:\\Program Files\\Couchbase\\Sync Gateway\\sg-windows.exe" start "C:\\Program Files\\Couchbase\\Sync Gateway\\sync_gateway.exe" "c:\\dusky\\serviceconfig.json" "C:\\Program Files\\Couchbase\\Sync Gateway\\var\\lib\\couchbase\\logs\\sync_gateway_error.log"

# Number of failures before "timeDelayInSecs" is activated
authenticationFailure.threshold=10
# Number of failures must occur within this time period
authenticationFailure.timePeriodInSecs=600
# How long to delay any login once the "go-slow" mode is activated
authenticationFailure.timeDelayInSecs=30


# Use random secret should be enabled for production environments. It will use a random secret for signing JWT tokens
# Set to false for Dev/Test environments so you don't need to authenticate everytime the server is restarted
jwt.useRandomSecret=false

# JWT Token expiration time in seconds, 8 hours
jwt.token.expirationInSecs=28800

# Create an Admin user for this environment once (if needed) on startup (useful for Dev/Test mainly)
#createAdminUser.enabled=true
#createAdminUser.username=Admin
#createAdminUser.password=PASSWORD

# The Content-Type header of the export file
export.http.contentType=application/vnd.ms-excel
# other options
#export.http.contentType=application/csv
#export.http.contentType=text/csv
export.filename.formatString=%1$s_%2$tF_%2$tH-%2$tM.csv
export.delimiter=,
#export.date.formatString=%1$tF %1$tT%1$tz
export.date.formatString=%1$tF %1$tT

# ESRI ArcGIS map tiles for offline maps
offline.maps.LINZ_geotiffs.alllayers.dir=../../DuskyMaps/Kakapo_Base_v3_Topo_Export/Layers/_alllayers

# Couchbase initialization parameters.
couchbase.init.createCluster.params={memoryQuota:'1024', clusterName:'Laptop', ftsMemoryQuota:'256'}
couchbase.init.storageMode.params={storageMode: 'forestdb', indexerThreads: 2}
couchbase.init.services.params={services:'index,fts,kv,n1ql'}
couchbase.init.stats.params={sendStats:'true'}
couchbase.init.userSetup.params={username:'Administrator', password:'${couchbase.admin.password}', port:'SAME'}
couchbase.init.createBucket.params={bucketType:'couchbase',authType:'sasl', name: '${couchbase.bucket}', ramQuotaMB:'1024', replicaNumber: '0'}
couchbase.init.createUser.params={password: '${couchbase.bucket.password}', roles: 'admin'}

# Options caching (20 mins)
options.cacheRefreshMillis=1200000


# LOGGING
# logging level
logging.level.org.springframework=ERROR
logging.level.com.mkyong=DEBUG

# output to a file
logging.file=Dusky.log

# SENTRY
sentry.dsn=<SENTRY DSN URL>
